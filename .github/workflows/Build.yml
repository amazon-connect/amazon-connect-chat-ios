name: Build and Test Amazon Connect Chat SDK for iOS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.4.0'

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7

    - name: Install xcpretty
      run: gem install xcpretty

    - name: Clean and Build SDK
      run: |
        echo "::group::Clean and Build SDK"
        xcodebuild clean -project AmazonConnectChatIOS.xcodeproj \
                         -scheme AmazonConnectChatIOS \
                         -sdk iphonesimulator \
                         -configuration Debug \
                         build
        echo "::endgroup::"
    - name: Run Unit Tests
      run: |
        echo "::group::Run Unit Tests"
        mkdir -p test_output
        
        # List available schemes to debug
        echo "Available schemes:"
        xcodebuild -list -project AmazonConnectChatIOS.xcodeproj
        
        # Use iPhone 15 with iOS 17.5
        DESTINATION="platform=iOS Simulator,OS=17.5,name=iPhone 15"
        
        # Run tests with AmazonConnectChatIOSTests scheme
        echo "Running tests with AmazonConnectChatIOSTests scheme..."
        set -o pipefail && xcodebuild test -project AmazonConnectChatIOS.xcodeproj \
                    -scheme AmazonConnectChatIOSTests \
                    -sdk iphonesimulator \
                    -destination "$DESTINATION" \
                    -configuration Debug \
                    -enableCodeCoverage YES \
                    -resultBundlePath test_output/results.xcresult \
                    | tee test_output/xcodebuild.log | xcpretty --color --test --report junit
        
        # Display failing tests more prominently
        echo "::endgroup::"
        
        echo "::group::Failing Tests Summary"
        if grep -q "Test Suite.*failed" test_output/xcodebuild*.log 2>/dev/null; then
          echo "❌ FAILING TESTS DETECTED:"
          grep -A 10 -B 2 "Test Case.*failed" test_output/xcodebuild*.log 2>/dev/null || true
        else
          echo "✅ All tests passed"
        fi
        echo "::endgroup::"
